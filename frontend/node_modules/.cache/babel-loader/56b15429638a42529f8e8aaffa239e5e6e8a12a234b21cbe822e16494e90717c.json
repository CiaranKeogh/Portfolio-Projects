{"ast":null,"code":"import api from './api';\n\n// Get all maps\nexport const getMaps = async () => {\n  try {\n    const response = await api.get('/maps');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get a single map by ID\nexport const getMapById = async id => {\n  try {\n    const response = await api.get(`/maps/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Get maps by game mode\nexport const getMapsByGameMode = async gameMode => {\n  try {\n    const response = await api.get(`/maps/gamemode/${gameMode}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Search maps\nexport const searchMaps = async searchTerm => {\n  try {\n    const response = await api.get(`/maps/search/${searchTerm}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Create a new map (admin/moderator only)\nexport const createMap = async mapData => {\n  try {\n    const response = await api.post('/maps', mapData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Update a map (admin/moderator only)\nexport const updateMap = async (id, mapData) => {\n  try {\n    const response = await api.put(`/maps/${id}`, mapData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Delete a map (admin only)\nexport const deleteMap = async id => {\n  try {\n    const response = await api.delete(`/maps/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["api","getMaps","response","get","data","error","getMapById","id","getMapsByGameMode","gameMode","searchMaps","searchTerm","createMap","mapData","post","updateMap","put","deleteMap","delete"],"sources":["C:/Users/Ciaran/Documents/War Thunder Tactics/frontend/src/services/mapService.js"],"sourcesContent":["import api from './api';\r\n\r\n// Get all maps\r\nexport const getMaps = async () => {\r\n  try {\r\n    const response = await api.get('/maps');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get a single map by ID\r\nexport const getMapById = async (id) => {\r\n  try {\r\n    const response = await api.get(`/maps/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get maps by game mode\r\nexport const getMapsByGameMode = async (gameMode) => {\r\n  try {\r\n    const response = await api.get(`/maps/gamemode/${gameMode}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Search maps\r\nexport const searchMaps = async (searchTerm) => {\r\n  try {\r\n    const response = await api.get(`/maps/search/${searchTerm}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create a new map (admin/moderator only)\r\nexport const createMap = async (mapData) => {\r\n  try {\r\n    const response = await api.post('/maps', mapData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update a map (admin/moderator only)\r\nexport const updateMap = async (id, mapData) => {\r\n  try {\r\n    const response = await api.put(`/maps/${id}`, mapData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete a map (admin only)\r\nexport const deleteMap = async (id) => {\r\n  try {\r\n    const response = await api.delete(`/maps/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,OAAO,CAAC;IACvC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,EAAE,IAAK;EACtC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,SAASI,EAAE,EAAE,CAAC;IAC7C,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;EACnD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,kBAAkBM,QAAQ,EAAE,CAAC;IAC5D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAG,MAAOC,UAAU,IAAK;EAC9C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,gBAAgBQ,UAAU,EAAE,CAAC;IAC5D,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,SAAS,GAAG,MAAOC,OAAO,IAAK;EAC1C,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMF,GAAG,CAACc,IAAI,CAAC,OAAO,EAAED,OAAO,CAAC;IACjD,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,SAAS,GAAG,MAAAA,CAAOR,EAAE,EAAEM,OAAO,KAAK;EAC9C,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMF,GAAG,CAACgB,GAAG,CAAC,SAAST,EAAE,EAAE,EAAEM,OAAO,CAAC;IACtD,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMY,SAAS,GAAG,MAAOV,EAAE,IAAK;EACrC,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMF,GAAG,CAACkB,MAAM,CAAC,SAASX,EAAE,EAAE,CAAC;IAChD,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}