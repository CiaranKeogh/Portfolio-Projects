{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ciaran\\\\Documents\\\\War Thunder Tactics\\\\frontend\\\\src\\\\pages\\\\Maps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Box, Container, Grid, Typography, Card, CardActionArea, CardContent, CardMedia, TextField, InputAdornment, FormControl, InputLabel, Select, MenuItem, CircularProgress, Divider, Chip } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Maps = () => {\n  _s();\n  const [maps, setMaps] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [gameMode, setGameMode] = useState('all');\n\n  // Sample map data (in a real app, this would come from an API)\n  const sampleMaps = [{\n    _id: '1',\n    name: 'Advance to the Rhine',\n    description: 'Urban combat with varied engagement distances from close quarters to mid-range city fighting.',\n    imageUrl: '/assets/maps/advance_to_rhine.jpg',\n    gameModes: ['Ground Arcade', 'Ground Realistic', 'Ground Simulator'],\n    size: 'Medium',\n    routes: 12,\n    positions: 8\n  }, {\n    _id: '2',\n    name: 'Berlin',\n    description: 'Dense urban warfare with destroyed buildings providing numerous sniping positions.',\n    imageUrl: '/assets/maps/berlin.jpg',\n    gameModes: ['Ground Arcade', 'Ground Realistic'],\n    size: 'Large',\n    routes: 18,\n    positions: 15\n  }, {\n    _id: '3',\n    name: 'Karelia',\n    description: 'Forest and rock formations with narrow chokepoints and some open areas.',\n    imageUrl: '/assets/maps/karelia.jpg',\n    gameModes: ['Ground Arcade', 'Ground Realistic', 'Ground Simulator'],\n    size: 'Small',\n    routes: 7,\n    positions: 9\n  }, {\n    _id: '4',\n    name: 'Finland',\n    description: 'Winter map with forests, hills and small villages providing diverse combat scenarios.',\n    imageUrl: '/assets/maps/finland.jpg',\n    gameModes: ['Ground Arcade', 'Ground Realistic'],\n    size: 'Medium',\n    routes: 5,\n    positions: 6\n  }, {\n    _id: '5',\n    name: 'Sinai',\n    description: 'Desert combat with open sightlines and some rocky formations for cover.',\n    imageUrl: '/assets/maps/sinai.jpg',\n    gameModes: ['Ground Arcade', 'Ground Realistic', 'Ground Simulator'],\n    size: 'Large',\n    routes: 9,\n    positions: 11\n  }, {\n    _id: '6',\n    name: 'Normandy',\n    description: 'Countryside with hills, hedgerows, and a small town, offering various tactical options.',\n    imageUrl: '/assets/maps/normandy.jpg',\n    gameModes: ['Ground Arcade', 'Ground Realistic'],\n    size: 'Medium',\n    routes: 14,\n    positions: 10\n  }];\n  useEffect(() => {\n    // Simulate API fetch with setTimeout\n    const fetchMaps = async () => {\n      try {\n        setLoading(true);\n\n        // In a real app, this would be an API call\n        setTimeout(() => {\n          setMaps(sampleMaps);\n          setLoading(false);\n        }, 1000);\n      } catch (error) {\n        setError('Failed to fetch maps. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchMaps();\n  }, []);\n\n  // Filter maps based on search term and selected game mode\n  const filteredMaps = maps.filter(map => {\n    const matchesSearch = map.name.toLowerCase().includes(searchTerm.toLowerCase()) || map.description.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesGameMode = gameMode === 'all' || map.gameModes.includes(gameMode);\n    return matchesSearch && matchesGameMode;\n  });\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleGameModeChange = event => {\n    setGameMode(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"War Thunder Maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      color: \"textSecondary\",\n      paragraph: true,\n      align: \"center\",\n      sx: {\n        mb: 4\n      },\n      children: \"Browse all available maps and discover tactical routes and power positions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            variant: \"outlined\",\n            label: \"Search Maps\",\n            value: searchTerm,\n            onChange: handleSearchChange,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"game-mode-label\",\n              children: \"Game Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"game-mode-label\",\n              id: \"game-mode-select\",\n              value: gameMode,\n              onChange: handleGameModeChange,\n              label: \"Game Mode\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"all\",\n                children: \"All Game Modes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Ground Arcade\",\n                children: \"Ground Arcade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Ground Realistic\",\n                children: \"Ground Realistic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Ground Simulator\",\n                children: \"Ground Simulator\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        mb: 4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      align: \"center\",\n      sx: {\n        my: 8\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this) : filteredMaps.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      sx: {\n        my: 8\n      },\n      children: \"No maps match your search criteria. Try adjusting your filters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: filteredMaps.map(map => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n            component: RouterLink,\n            to: `/maps/${map._id}`,\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"160\",\n              image: map.imageUrl || '/assets/maps/default_map.jpg',\n              alt: map.name,\n              sx: {\n                objectFit: 'cover'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              sx: {\n                flexGrow: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                gutterBottom: true,\n                variant: \"h5\",\n                component: \"h2\",\n                children: map.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                paragraph: true,\n                children: map.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 1,\n                  mb: 2\n                },\n                children: map.gameModes.map(mode => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: mode,\n                  size: \"small\"\n                }, mode, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [\"Size: \", map.size]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [map.routes, \" Routes \\u2022 \", map.positions, \" Positions\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this)\n      }, map._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(Maps, \"1cRpopwY4bYUN1NGdAB2Igibc9Y=\");\n_c = Maps;\nexport default Maps;\nvar _c;\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["React","useState","useEffect","Link","RouterLink","Box","Container","Grid","Typography","Card","CardActionArea","CardContent","CardMedia","TextField","InputAdornment","FormControl","InputLabel","Select","MenuItem","CircularProgress","Divider","Chip","SearchIcon","jsxDEV","_jsxDEV","Maps","_s","maps","setMaps","loading","setLoading","error","setError","searchTerm","setSearchTerm","gameMode","setGameMode","sampleMaps","_id","name","description","imageUrl","gameModes","size","routes","positions","fetchMaps","setTimeout","filteredMaps","filter","map","matchesSearch","toLowerCase","includes","matchesGameMode","handleSearchChange","event","target","value","handleGameModeChange","maxWidth","sx","py","children","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","color","paragraph","mb","container","spacing","item","xs","md","fullWidth","label","onChange","InputProps","startAdornment","position","id","labelId","display","justifyContent","my","length","sm","height","flexDirection","to","image","alt","objectFit","flexGrow","flexWrap","gap","mode","_c","$RefreshReg$"],"sources":["C:/Users/Ciaran/Documents/War Thunder Tactics/frontend/src/pages/Maps.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  TextField,\r\n  InputAdornment,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  CircularProgress,\r\n  Divider,\r\n  Chip,\r\n} from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nconst Maps = () => {\r\n  const [maps, setMaps] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [gameMode, setGameMode] = useState('all');\r\n  \r\n  // Sample map data (in a real app, this would come from an API)\r\n  const sampleMaps = [\r\n    {\r\n      _id: '1',\r\n      name: 'Advance to the Rhine',\r\n      description: 'Urban combat with varied engagement distances from close quarters to mid-range city fighting.',\r\n      imageUrl: '/assets/maps/advance_to_rhine.jpg',\r\n      gameModes: ['Ground Arcade', 'Ground Realistic', 'Ground Simulator'],\r\n      size: 'Medium',\r\n      routes: 12,\r\n      positions: 8,\r\n    },\r\n    {\r\n      _id: '2',\r\n      name: 'Berlin',\r\n      description: 'Dense urban warfare with destroyed buildings providing numerous sniping positions.',\r\n      imageUrl: '/assets/maps/berlin.jpg',\r\n      gameModes: ['Ground Arcade', 'Ground Realistic'],\r\n      size: 'Large',\r\n      routes: 18,\r\n      positions: 15,\r\n    },\r\n    {\r\n      _id: '3',\r\n      name: 'Karelia',\r\n      description: 'Forest and rock formations with narrow chokepoints and some open areas.',\r\n      imageUrl: '/assets/maps/karelia.jpg',\r\n      gameModes: ['Ground Arcade', 'Ground Realistic', 'Ground Simulator'],\r\n      size: 'Small',\r\n      routes: 7,\r\n      positions: 9,\r\n    },\r\n    {\r\n      _id: '4',\r\n      name: 'Finland',\r\n      description: 'Winter map with forests, hills and small villages providing diverse combat scenarios.',\r\n      imageUrl: '/assets/maps/finland.jpg',\r\n      gameModes: ['Ground Arcade', 'Ground Realistic'],\r\n      size: 'Medium',\r\n      routes: 5,\r\n      positions: 6,\r\n    },\r\n    {\r\n      _id: '5',\r\n      name: 'Sinai',\r\n      description: 'Desert combat with open sightlines and some rocky formations for cover.',\r\n      imageUrl: '/assets/maps/sinai.jpg',\r\n      gameModes: ['Ground Arcade', 'Ground Realistic', 'Ground Simulator'],\r\n      size: 'Large',\r\n      routes: 9,\r\n      positions: 11,\r\n    },\r\n    {\r\n      _id: '6',\r\n      name: 'Normandy',\r\n      description: 'Countryside with hills, hedgerows, and a small town, offering various tactical options.',\r\n      imageUrl: '/assets/maps/normandy.jpg',\r\n      gameModes: ['Ground Arcade', 'Ground Realistic'],\r\n      size: 'Medium',\r\n      routes: 14,\r\n      positions: 10,\r\n    },\r\n  ];\r\n  \r\n  useEffect(() => {\r\n    // Simulate API fetch with setTimeout\r\n    const fetchMaps = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // In a real app, this would be an API call\r\n        setTimeout(() => {\r\n          setMaps(sampleMaps);\r\n          setLoading(false);\r\n        }, 1000);\r\n      } catch (error) {\r\n        setError('Failed to fetch maps. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchMaps();\r\n  }, []);\r\n  \r\n  // Filter maps based on search term and selected game mode\r\n  const filteredMaps = maps.filter((map) => {\r\n    const matchesSearch = map.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         map.description.toLowerCase().includes(searchTerm.toLowerCase());\r\n                         \r\n    const matchesGameMode = gameMode === 'all' || map.gameModes.includes(gameMode);\r\n    \r\n    return matchesSearch && matchesGameMode;\r\n  });\r\n  \r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n  \r\n  const handleGameModeChange = (event) => {\r\n    setGameMode(event.target.value);\r\n  };\r\n  \r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\r\n        War Thunder Maps\r\n      </Typography>\r\n      \r\n      <Typography variant=\"subtitle1\" color=\"textSecondary\" paragraph align=\"center\" sx={{ mb: 4 }}>\r\n        Browse all available maps and discover tactical routes and power positions\r\n      </Typography>\r\n      \r\n      <Box sx={{ mb: 4 }}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={8}>\r\n            <TextField\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              label=\"Search Maps\"\r\n              value={searchTerm}\r\n              onChange={handleSearchChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <FormControl fullWidth variant=\"outlined\">\r\n              <InputLabel id=\"game-mode-label\">Game Mode</InputLabel>\r\n              <Select\r\n                labelId=\"game-mode-label\"\r\n                id=\"game-mode-select\"\r\n                value={gameMode}\r\n                onChange={handleGameModeChange}\r\n                label=\"Game Mode\"\r\n              >\r\n                <MenuItem value=\"all\">All Game Modes</MenuItem>\r\n                <MenuItem value=\"Ground Arcade\">Ground Arcade</MenuItem>\r\n                <MenuItem value=\"Ground Realistic\">Ground Realistic</MenuItem>\r\n                <MenuItem value=\"Ground Simulator\">Ground Simulator</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      \r\n      <Divider sx={{ mb: 4 }} />\r\n      \r\n      {loading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 8 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : error ? (\r\n        <Typography color=\"error\" align=\"center\" sx={{ my: 8 }}>\r\n          {error}\r\n        </Typography>\r\n      ) : filteredMaps.length === 0 ? (\r\n        <Typography align=\"center\" sx={{ my: 8 }}>\r\n          No maps match your search criteria. Try adjusting your filters.\r\n        </Typography>\r\n      ) : (\r\n        <Grid container spacing={4}>\r\n          {filteredMaps.map((map) => (\r\n            <Grid item key={map._id} xs={12} sm={6} md={4}>\r\n              <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n                <CardActionArea component={RouterLink} to={`/maps/${map._id}`}>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    height=\"160\"\r\n                    image={map.imageUrl || '/assets/maps/default_map.jpg'}\r\n                    alt={map.name}\r\n                    sx={{ objectFit: 'cover' }}\r\n                  />\r\n                  <CardContent sx={{ flexGrow: 1 }}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {map.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\r\n                      {map.description}\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\r\n                      {map.gameModes.map((mode) => (\r\n                        <Chip key={mode} label={mode} size=\"small\" />\r\n                      ))}\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                      <Typography variant=\"body2\">\r\n                        Size: {map.size}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\">\r\n                        {map.routes} Routes • {map.positions} Positions\r\n                      </Typography>\r\n                    </Box>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Maps; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}